name: main

on:
  push:
    branches: [ main ]

jobs:
  workflow_run:
    env:
      DAPR_PORT: "20000"
      DAPR_APP_PORT: "20001"
      STATE_STORE_NAME: "redisstatestore"
      PUBSUB_NAME: "kafkapubsub"
      SAMPLE_KEY_NAME: "sample_key_name"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7.9'

    - name: Setup Environment
      run: |
        python3 -m pip install --upgrade pip setuptools wheel
        python3 -m pip install -r requirements.txt
        wget -q https://raw.githubusercontent.com/dapr/cli/master/install/install.sh -O - | /bin/bash
        echo "/home/runner/.dapr/bin" >> $GITHUB_PATH

    - name: Setting up dapr
      id: create_components
      run: |
        python3 export_secrets_to_components.py
        dapr init
        dapr run --app-id dapr_sidecar -d components -P grpc -G $DAPR_PORT &
      env:
        DAPR_COMPONENT_LOCALREDISSTATE: ${{ secrets.DAPR_COMPONENT_STATE_STORE }}
        DAPR_COMPONENT_LOCALPUBSUB: ${{ secrets.DAPR_COMPONENT_PUBSUB }}

    - name: Step 1 - Retrieve state
      id: step_1
      run: python3 step_1.py

    - name: Step 2 - Write with contention
      id: step_2
      run: python3 step_2.py

    - name: Step 3 - Push and pull to pubsub
      id: step_3
      run: |
        dapr run --app-id step_3_consume --app-protocol grpc --app-port 20001 -d ./components python3 step_3_consume.py &
        python3 step_3_publish.py

    - name: Stop Dapr
      id: stop_dapr
      run: dapr stop dapr_sidecar